format_version: 3
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
app:
  envs:
    - GO_PROJECT_PATH: github.com/bitrise-io/bitrise-webhooks
    - PORT: "4000"
    - IS_USE_GIN: "yes"
      opts:
        description: |
          If set to "yes" we'll use github.com/codegangsta/gin to live-reload the code on change.
      opts:
        description: |
          Optionally, define this in your .bitrise.secrets.yml, to send requests to the specified URL.
workflows:
  _install_test_tools:
    steps:
      - script:
          title: Install required testing tools
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                # Check for unhandled errors
                go get -u github.com/kisielk/errcheck

                # Go lint
                go get -u golang.org/x/lint/golint
  deps-update:
    steps:
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                go get -u -v github.com/golang/dep/cmd/dep
                # to prevent "Gopkg.lock is out of sync ..." when new deps are added
                dep ensure -v
                # to do the actual update
                dep ensure -v -update
  start:
    steps:
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                go install $GO_PROJECT_PATH
                if [ "$IS_USE_GIN" == "yes" ] ; then
                  go get github.com/codegangsta/gin
                  gin --port $PORT
                else
                  bitrise-webhooks -port $PORT
                fi
  test:
    before_run:
      - _install_test_tools
    steps:
      - script:
          title: Print infos for the test
          inputs:
            - content: |-
                set -x
                go version
      - script:
          title: GOLIST_WITHOUT_VENDOR
          inputs:
            - content: |-
                set -ex
                no_vendor_paths="$(go list ./... | grep -v vendor)"
                envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
      - script:
          title: Go Test
          inputs:
            - content: go test ./...
      - script:
          title: Go Vet
          inputs:
            - content: go vet ./...
      - script:
          title: Err check
          inputs:
            - content: errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
      - script:
          title: Go Lint
          inputs:
            - content: |-
                #!/bin/bash
                set -e

                while read -r line; do
                  echo "-> Linting: $line"
                  golint_out="$(golint $line)"
                  if [[ "${golint_out}" != "" ]] ; then
                    echo "=> Golint issues found:"
                    echo "${golint_out}"
                    exit 1
                  fi
                done <<< "$GOLIST_WITHOUT_VENDOR"
